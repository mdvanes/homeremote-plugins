// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_array = require("rescript/lib/js/caml_array.js");

function toClassName0(input) {
  return input.filter(function (param) {
                  return param[1];
                }).map(function (param) {
                return param[0];
              }).join("_");
}

var testResult0 = toClassName0([
      [
        "class1",
        true
      ],
      [
        "class2",
        false
      ],
      [
        "class3",
        true
      ]
    ]);

function test0(param) {
  console.log("1. With Generic array", testResult0);
  
}

function toClassName1(input) {
  return input.map(function (param) {
                return param._0;
              }).join("_");
}

var testResult1 = toClassName1([
      /* StringAndBool */{
        _0: "class1",
        _1: true
      },
      /* StringAndBool */{
        _0: "class2",
        _1: false
      },
      /* StringAndBool */{
        _0: "class3",
        _1: true
      }
    ]);

function test1(param) {
  console.log("2. With custom variant", testResult1);
  
}

function toClassName(input) {
  return input.filter(function (item) {
                  if (item.TAG === /* Name */0) {
                    return true;
                  } else {
                    return item._1;
                  }
                }).map(function (item) {
                return item._0;
              }).join(" ");
}

function compareDockerContainer(c1, c2) {
  var name1 = Caml_array.get(c1.Names, 0);
  var name2 = Caml_array.get(c2.Names, 0);
  if (name1 < name2) {
    return -1;
  } else if (name1 > name2) {
    return 1;
  } else {
    return 0;
  }
}

exports.toClassName0 = toClassName0;
exports.testResult0 = testResult0;
exports.test0 = test0;
exports.toClassName1 = toClassName1;
exports.testResult1 = testResult1;
exports.test1 = test1;
exports.toClassName = toClassName;
exports.compareDockerContainer = compareDockerContainer;
/* testResult0 Not a pure module */
