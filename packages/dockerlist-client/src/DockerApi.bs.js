// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Js_exn from "rescript/lib/es6/js_exn.js";

function handleResponse(promise, onError, errorMessage) {
  var __x = promise.then(function (jsonResponse) {
        var response = JSON.parse(jsonResponse);
        if (response.status === "received") {
          return Promise.resolve(response.containers);
        } else {
          return Js_exn.raiseError("Error in response");
        }
      });
  return __x.catch(function (_err) {
              Curry._1(onError, errorMessage);
              return Promise.resolve([]);
            });
}

function getDockerList(url, onError) {
  var __x = fetch(url + "/api/dockerlist");
  return handleResponse(__x.then(function (prim) {
                  return prim.text();
                }), onError, "error in getDockerList");
}

function startContainer(url, id, onError) {
  var __x = fetch(url + "/api/dockerlist/start/" + id);
  return handleResponse(__x.then(function (prim) {
                  return prim.text();
                }), onError, "error in startContainer");
}

function stopContainer(url, id, onError) {
  var __x = fetch(url + "/api/dockerlist/stop/" + id);
  return handleResponse(__x.then(function (prim) {
                  return prim.text();
                }), onError, "error in stopContainer");
}

export {
  handleResponse ,
  getDockerList ,
  startContainer ,
  stopContainer ,
  
}
/* No side effect */
