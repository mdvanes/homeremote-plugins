// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as DockerListModuleCss from "./DockerList.module.css";
import * as DockerApi$MdworldHomeremoteDockerlist from "./DockerApi.bs.js";
import * as DockerUtil$MdworldHomeremoteDockerlist from "./DockerUtil.bs.js";
import * as ButtonWithConfirm$MdworldHomeremoteDockerlist from "./ButtonWithConfirm.bs.js";

var styles = DockerListModuleCss;

function DockerListItem(Props) {
  var url = Props.url;
  var container = Props.container;
  var setContainers = Props.setContainers;
  var confirmButtonStyle = Props.confirmButtonStyle;
  var onError = Props.onError;
  var id = container.Id;
  var state = container.State;
  var isRunning = state === "running";
  var isExited = state === "exited";
  var isUnexpected = !isRunning && !isExited;
  var className = DockerUtil$MdworldHomeremoteDockerlist.toClassName([
        {
          TAG: /* Name */0,
          _0: styles["button-list-item"]
        },
        {
          TAG: /* Name */0,
          _0: styles["mui-button"]
        },
        {
          TAG: /* NameOn */1,
          _0: styles["button-success"],
          _1: isRunning
        },
        {
          TAG: /* NameOn */1,
          _0: styles["button-error"],
          _1: isUnexpected
        }
      ]);
  var name = container.Names.map(function (name) {
          return name.slice(1);
        }).join(" ");
  return React.createElement(ButtonWithConfirm$MdworldHomeremoteDockerlist.make, {
              onClick: isRunning ? (function (param) {
                    DockerApi$MdworldHomeremoteDockerlist.stopContainer(url, id, onError).then(function (_response) {
                            return DockerApi$MdworldHomeremoteDockerlist.getDockerList(url, onError);
                          }).then(function (containerList) {
                          Curry._1(setContainers, (function (_prev) {
                                  return containerList;
                                }));
                          return Promise.resolve(containerList);
                        });
                    
                  }) : (function (param) {
                    DockerApi$MdworldHomeremoteDockerlist.startContainer(url, id, onError).then(function (_response) {
                            return DockerApi$MdworldHomeremoteDockerlist.getDockerList(url, onError);
                          }).then(function (containerList) {
                          Curry._1(setContainers, (function (_prev) {
                                  return containerList;
                                }));
                          return Promise.resolve(containerList);
                        });
                    
                  }),
              question: isRunning ? "Do you want to stop " + name + "?" : "Do you want to start " + name + "?",
              className: className,
              confirmButtonStyle: confirmButtonStyle,
              children: null,
              key: id
            }, React.createElement("h1", undefined, name), React.createElement("p", undefined, container.Status));
}

var make = DockerListItem;

export {
  styles ,
  make ,
  
}
/* styles Not a pure module */
