// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Core = require("@material-ui/core");
var DockerListModuleCss = require("./DockerList.module.css");
var DockerApi$MdworldHomeremoteDockerlist = require("./DockerApi.bs.js");
var DockerUtil$MdworldHomeremoteDockerlist = require("./DockerUtil.bs.js");
var DockerListItem$MdworldHomeremoteDockerlist = require("./DockerListItem.bs.js");

var styles = DockerListModuleCss;

function DockerList$DockerListMod(Props) {
  var url = Props.url;
  var onError = Props.onError;
  var confirmButtonStyleOpt = Props.confirmButtonStyle;
  var confirmButtonStyle = confirmButtonStyleOpt !== undefined ? Caml_option.valFromOption(confirmButtonStyleOpt) : ({
        backgroundColor: "darkblue",
        color: "white"
      });
  var match = React.useState(function () {
        return [];
      });
  var setContainers = match[1];
  var containers = match[0];
  React.useEffect((function () {
          var update = function (param) {
            DockerApi$MdworldHomeremoteDockerlist.getDockerList(url, onError).then(function (containerList) {
                  Curry._1(setContainers, (function (_prev) {
                          return containerList;
                        }));
                  return Promise.resolve(containerList);
                });
            
          };
          update(undefined);
          var interval = setInterval(update, 60000);
          return (function (param) {
                    clearInterval(interval);
                    
                  });
        }), []);
  var nrOfContainers = containers.sort(DockerUtil$MdworldHomeremoteDockerlist.compareDockerContainer).length;
  var middleIndex = nrOfContainers / 2 | 0;
  var containersFirstHalf = containers.sort(DockerUtil$MdworldHomeremoteDockerlist.compareDockerContainer).slice(0, middleIndex);
  var containersSecondHalf = containers.sort(DockerUtil$MdworldHomeremoteDockerlist.compareDockerContainer).slice(middleIndex);
  return React.createElement("div", {
              className: styles.root
            }, React.createElement(Core.Typography, {
                  children: "Some example text"
                }), React.createElement("table", {
                  className: styles["button-list"]
                }, React.createElement("thead", undefined, React.createElement("tr", undefined, React.createElement("th", undefined, "State"), React.createElement("th", undefined, "Name"))), React.createElement("tbody", undefined, containersFirstHalf.map(function (dockerContainer) {
                          return React.createElement(DockerListItem$MdworldHomeremoteDockerlist.make, {
                                      url: url,
                                      container: dockerContainer,
                                      setContainers: setContainers,
                                      confirmButtonStyle: confirmButtonStyle,
                                      onError: onError,
                                      key: dockerContainer.Id
                                    });
                        }))), React.createElement("table", {
                  className: styles["button-list"]
                }, React.createElement("thead", undefined, React.createElement("tr", undefined, React.createElement("th", undefined, "State"), React.createElement("th", undefined, "Name"))), React.createElement("tbody", undefined, containersSecondHalf.map(function (dockerContainer) {
                          return React.createElement(DockerListItem$MdworldHomeremoteDockerlist.make, {
                                      url: url,
                                      container: dockerContainer,
                                      setContainers: setContainers,
                                      confirmButtonStyle: confirmButtonStyle,
                                      onError: onError,
                                      key: dockerContainer.Id
                                    });
                        }))));
}

var DockerListMod = {
  make: DockerList$DockerListMod
};

exports.styles = styles;
exports.DockerListMod = DockerListMod;
/* styles Not a pure module */
